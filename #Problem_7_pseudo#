2 (1 and itself, no possibilities in between), base case in program
3 (1 and itself, no 2) 
4 (NO..2)
5 (1 and itself, no 2,3,4)
6 1, 2, 3, 


with 3....check 2...has a remainder....3 is a prime....add one to list of primes (if necessary, record 3)....move to the next number
with 4....check 2...has no remainder....not prime...move to the next number
with 5....check 2...has a remainder....check 3....has remainder....check 4....has reminader....5 is a prime.....add one to list of primes (if necessary, record 5)....move to the next number
with 6....check 2...has no remainder....not prime..move to the next number

general case
---------------
number_of_primes = 1
starting with 3

always start with 2 and iterate until i = n-1
if no remainder (==0) anywhere on list, not prime...break loop...move to the next number
if after all numbers prior, no case of ==0, number is prime....add one to list of prime (if necessary, record this number)




num_test = 3
total_primes = 1

	 until total_primes = 6
	     for i in 2..num_test-1    #For that specific num to test if prime
    	     	 if num % i != 0
       		    total_primes += 1
	     	 end
		 puts num_test
	     end
	   puts num_test 